// 库存管理工具 Prisma Schema
// 严格按照 TECH_ARCHITECTURE 文档设计
// 支持 MySQL 8.0+ 特性：JSON字段、全文搜索、窗口函数

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// SQLite 不支持枚举，使用字符串约束替代

// 用户表 - 系统用户管理
model User {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String
  passwordHash String   @map("password_hash")
  role         String   @default("sales") // admin, sales
  status       String   @default("active") // active, inactive
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // 关联关系
  salesOrders    SalesOrder[]
  inboundRecords InboundRecord[]

  @@index([email])
  @@index([role])
  @@map("users")
}

// 客户表 - 客户信息管理，支持层级关系
model Customer {
  id               String    @id @default(uuid())
  name             String
  phone            String?
  address          String?
  extendedInfo     String?   @map("extended_info") // JSON格式的客户扩展信息（SQLite存储为文本）
  parentCustomerId String?   @map("parent_customer_id")
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  // 自关联：客户层级关系
  parentCustomer Customer?  @relation("CustomerHierarchy", fields: [parentCustomerId], references: [id])
  childCustomers Customer[] @relation("CustomerHierarchy")

  // 关联关系
  salesOrders SalesOrder[]

  @@index([name])
  @@index([phone])
  @@index([parentCustomerId], map: "idx_customers_parent")
  @@map("customers")
}

// 产品表 - 产品基础信息管理
model Product {
  id             String   @id @default(uuid())
  code           String   @unique
  name           String
  specification  String?
  specifications String?  // JSON格式的详细规格信息（SQLite存储为文本）
  unit           String   @default("piece") // piece, sheet, strip
  piecesPerUnit  Int      @default(1) @map("pieces_per_unit")
  weight         Float?
  status         String   @default("active") // active, inactive
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // 关联关系
  inventory        Inventory[]
  salesOrderItems  SalesOrderItem[]
  inboundRecords   InboundRecord[]

  @@index([code])
  @@index([status])
  @@map("products")
}

// 销售单表 - 销售订单主表
model SalesOrder {
  id           String   @id @default(uuid())
  orderNumber  String   @unique @map("order_number")
  customerId   String   @map("customer_id")
  userId       String   @map("user_id")
  status       String   @default("draft") // draft, confirmed, shipped, completed, cancelled
  totalAmount  Float    @default(0) @map("total_amount")
  remarks      String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // 关联关系
  customer Customer         @relation(fields: [customerId], references: [id])
  user     User             @relation(fields: [userId], references: [id])
  items    SalesOrderItem[]

  @@index([customerId], map: "idx_sales_orders_customer")
  @@index([userId], map: "idx_sales_orders_user")
  @@index([status], map: "idx_sales_orders_status")
  @@index([createdAt(sort: Desc)], map: "idx_sales_orders_date")
  @@map("sales_orders")
}

// 销售单明细表 - 销售订单明细，包含瓷砖行业特有字段
model SalesOrderItem {
  id             String     @id @default(uuid())
  salesOrderId   String     @map("sales_order_id")
  productId      String     @map("product_id")
  colorCode      String?    @map("color_code")
  productionDate String?    @map("production_date") // 生产日期，瓷砖行业特有
  quantity       Float
  unitPrice      Float      @map("unit_price")
  subtotal       Float

  // 关联关系
  salesOrder SalesOrder @relation(fields: [salesOrderId], references: [id], onDelete: Cascade)
  product    Product    @relation(fields: [productId], references: [id])

  @@index([salesOrderId], map: "idx_sales_order_items_order")
  @@index([productId], map: "idx_sales_order_items_product")
  @@index([productId, colorCode], map: "idx_sales_order_items_product_color")
  @@map("sales_order_items")
}

// 库存表 - 产品库存管理，支持色号和生产日期维度
model Inventory {
  id               String    @id @default(uuid())
  productId        String    @map("product_id")
  colorCode        String?   @map("color_code")
  productionDate   DateTime? @map("production_date")
  quantity         Int       @default(0)
  reservedQuantity Int       @default(0) @map("reserved_quantity") // 预留数量
  updatedAt        DateTime  @updatedAt @map("updated_at")

  // 关联关系
  product Product @relation(fields: [productId], references: [id])

  @@unique([productId, colorCode, productionDate], map: "uk_inventory")
  @@index([productId], map: "idx_inventory_product")
  @@index([quantity], map: "idx_inventory_quantity")
  @@index([productId, colorCode], map: "idx_inventory_product_color")
  @@map("inventory")
}

// 入库记录表 - 入库操作记录，支持多种入库类型
model InboundRecord {
  id             String    @id @default(uuid())
  recordNumber   String    @unique @map("record_number")
  type           String    @default("normal_inbound") // normal_inbound, return_inbound, adjust_inbound
  productId      String    @map("product_id")
  colorCode      String?   @map("color_code")
  productionDate DateTime? @map("production_date")
  quantity       Float
  remarks        String?
  userId         String    @map("user_id")
  createdAt      DateTime  @default(now()) @map("created_at")

  // 关联关系
  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@index([productId], map: "idx_inbound_records_product")
  @@index([userId], map: "idx_inbound_records_user")
  @@index([type], map: "idx_inbound_records_type")
  @@index([createdAt(sort: Desc)], map: "idx_inbound_records_date")
  @@map("inbound_records")
}
